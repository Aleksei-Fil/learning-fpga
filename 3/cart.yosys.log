
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2025  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.51+46 (git sha1 8bde6ac17, clang++ 18.1.8 -fPIC -O3)

-- Running command `verilog_defaults -add -I./' --

-- Running command `read_verilog -sv top.sv motor_drv.sv control.sv servo_pdm.sv ir_decoder_fix.v' --

1. Executing Verilog-2005 frontend: top.sv
Parsing SystemVerilog input from `top.sv' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: motor_drv.sv
Parsing SystemVerilog input from `motor_drv.sv' to AST representation.
Generating RTLIL representation for module `\motor_drv'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: control.sv
Parsing SystemVerilog input from `control.sv' to AST representation.
Generating RTLIL representation for module `\control'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: servo_pdm.sv
Parsing SystemVerilog input from `servo_pdm.sv' to AST representation.
Generating RTLIL representation for module `\servo_pdm'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: ir_decoder_fix.v
Parsing SystemVerilog input from `ir_decoder_fix.v' to AST representation.
Generating RTLIL representation for module `\ir_decoder_fix'.
Successfully finished Verilog frontend.

-- Running command `synth_ecp5 -json cart.json -top top' --

6. Executing SYNTH_ECP5 pass.

6.1. Executing Verilog-2005 frontend: /home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v
Parsing Verilog input from `/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\$__ABC9_LUT5'.
Generating RTLIL representation for module `\$__ABC9_LUT6'.
Generating RTLIL representation for module `\$__ABC9_LUT7'.
Generating RTLIL representation for module `\L6MUX21'.
Generating RTLIL representation for module `\CCU2C'.
Generating RTLIL representation for module `\TRELLIS_RAM16X2'.
Generating RTLIL representation for module `\PFUMX'.
Generating RTLIL representation for module `\TRELLIS_DPR16X4'.
Generating RTLIL representation for module `\DPR16X4C'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\TRELLIS_FF'.
Generating RTLIL representation for module `\TRELLIS_IO'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\TRELLIS_COMB'.
Generating RTLIL representation for module `\DP16KD'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

6.2. Executing Verilog-2005 frontend: /home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_bb.v
Parsing Verilog input from `/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_bb.v' to AST representation.
Generating RTLIL representation for module `\MULT18X18D'.
Generating RTLIL representation for module `\ALU54B'.
Generating RTLIL representation for module `\EHXPLLL'.
Generating RTLIL representation for module `\DTR'.
Generating RTLIL representation for module `\OSCG'.
Generating RTLIL representation for module `\USRMCLK'.
Generating RTLIL representation for module `\JTAGG'.
Generating RTLIL representation for module `\DELAYF'.
Generating RTLIL representation for module `\DELAYG'.
Generating RTLIL representation for module `\IDDRX1F'.
Generating RTLIL representation for module `\IDDRX2F'.
Generating RTLIL representation for module `\IDDR71B'.
Generating RTLIL representation for module `\IDDRX2DQA'.
Generating RTLIL representation for module `\ODDRX1F'.
Generating RTLIL representation for module `\ODDRX2F'.
Generating RTLIL representation for module `\ODDR71B'.
Generating RTLIL representation for module `\OSHX2A'.
Generating RTLIL representation for module `\ODDRX2DQA'.
Generating RTLIL representation for module `\ODDRX2DQSB'.
Generating RTLIL representation for module `\TSHX2DQA'.
Generating RTLIL representation for module `\TSHX2DQSA'.
Generating RTLIL representation for module `\DQSBUFM'.
Generating RTLIL representation for module `\DDRDLLA'.
Generating RTLIL representation for module `\DLLDELD'.
Generating RTLIL representation for module `\CLKDIVF'.
Generating RTLIL representation for module `\ECLKSYNCB'.
Generating RTLIL representation for module `\ECLKBRIDGECS'.
Generating RTLIL representation for module `\DCCA'.
Generating RTLIL representation for module `\DCSC'.
Generating RTLIL representation for module `\DCUA'.
Generating RTLIL representation for module `\EXTREFB'.
Generating RTLIL representation for module `\PCSCLKDIV'.
Generating RTLIL representation for module `\PUR'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\SGSR'.
Generating RTLIL representation for module `\PDPW16KD'.
Successfully finished Verilog frontend.

6.3. Executing HIERARCHY pass (managing design hierarchy).

6.3.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \ir_decoder_fix
Used module:     \servo_pdm
Used module:     \motor_drv
Used module:     \control
Parameter \clk_hz = 25000000
Parameter \cyc_hz = 50

6.3.2. Executing AST frontend in derive mode using pre-parsed AST for module `\servo_pdm'.
Parameter \clk_hz = 25000000
Parameter \cyc_hz = 50
Generating RTLIL representation for module `$paramod$cc5cfa50089fcf584c032a5c3f3768aa1a1f6e95\servo_pdm'.
Parameter \clk_hz = 25000000
Parameter \pwm_hz = 250

6.3.3. Executing AST frontend in derive mode using pre-parsed AST for module `\motor_drv'.
Parameter \clk_hz = 25000000
Parameter \pwm_hz = 250
Generating RTLIL representation for module `$paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv'.
Parameter \clk_hz = 25000000
Parameter \sclk_hz = 256

6.3.4. Executing AST frontend in derive mode using pre-parsed AST for module `\control'.
Parameter \clk_hz = 25000000
Parameter \sclk_hz = 256
Generating RTLIL representation for module `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control'.

6.3.5. Analyzing design hierarchy..
Top module:  \top
Used module:     \ir_decoder_fix
Used module:     $paramod$cc5cfa50089fcf584c032a5c3f3768aa1a1f6e95\servo_pdm
Used module:     $paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv
Used module:     $paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control

6.3.6. Analyzing design hierarchy..
Top module:  \top
Used module:     \ir_decoder_fix
Used module:     $paramod$cc5cfa50089fcf584c032a5c3f3768aa1a1f6e95\servo_pdm
Used module:     $paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv
Used module:     $paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control
Removing unused module `\servo_pdm'.
Removing unused module `\control'.
Removing unused module `\motor_drv'.
Removed 3 unused modules.

6.4. Executing PROC pass (convert processes to netlists).

6.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:213$173'.
Cleaned up 1 empty switch.

6.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:350$280 in module TRELLIS_FF.
Marked 1 switch rules as full_case in process $proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:285$232 in module DPR16X4C.
Marked 1 switch rules as full_case in process $proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:221$174 in module TRELLIS_DPR16X4.
Marked 6 switch rules as full_case in process $proc$ir_decoder_fix.v:44$39 in module ir_decoder_fix.
Marked 1 switch rules as full_case in process $proc$ir_decoder_fix.v:28$35 in module ir_decoder_fix.
Marked 4 switch rules as full_case in process $proc$control.sv:41$303 in module $paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.
Marked 2 switch rules as full_case in process $proc$control.sv:27$299 in module $paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.
Marked 1 switch rules as full_case in process $proc$motor_drv.sv:21$290 in module $paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv.
Marked 3 switch rules as full_case in process $proc$servo_pdm.sv:28$284 in module $paramod$cc5cfa50089fcf584c032a5c3f3768aa1a1f6e95\servo_pdm.
Removed a total of 0 dead cases.

6.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 3 redundant assignments.
Promoted 43 assignments to connections.

6.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$281'.
  Set init value: \Q = 1'0

6.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst in `\ir_decoder_fix.$proc$ir_decoder_fix.v:44$39'.
Found async reset \rst in `\ir_decoder_fix.$proc$ir_decoder_fix.v:28$35'.
Found async reset \rst in `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.$proc$control.sv:41$303'.
Found async reset \rst in `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.$proc$control.sv:27$299'.
Found async reset \rst in `$paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv.$proc$motor_drv.sv:21$290'.
Found async reset \rst in `$paramod$cc5cfa50089fcf584c032a5c3f3768aa1a1f6e95\servo_pdm.$proc$servo_pdm.sv:28$284'.

6.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~30 debug messages>

6.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$281'.
Creating decoders for process `\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:350$280'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DPR16X4C.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$255'.
Creating decoders for process `\DPR16X4C.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:285$232'.
     1/3: $1$memwr$\ram$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:287$231_EN[3:0]$238
     2/3: $1$memwr$\ram$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:287$231_DATA[3:0]$237
     3/3: $1$memwr$\ram$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:287$231_ADDR[3:0]$236
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$198'.
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:221$174'.
     1/3: $1$memwr$\mem$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:223$172_EN[3:0]$180
     2/3: $1$memwr$\mem$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:223$172_DATA[3:0]$179
     3/3: $1$memwr$\mem$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:223$172_ADDR[3:0]$178
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:213$173'.
Creating decoders for process `\ir_decoder_fix.$proc$ir_decoder_fix.v:44$39'.
     1/10: $6\cmd[31:0]
     2/10: $5\cmd[31:0]
     3/10: $4\cmd[31:0]
     4/10: $3\cmd[31:0]
     5/10: $2\cmd[31:0]
     6/10: $1\cmd[31:0]
     7/10: $0\bit_count[7:0]
     8/10: $0\t1[20:0]
     9/10: $0\ir_input_last[0:0]
    10/10: $0\ready[0:0]
Creating decoders for process `\ir_decoder_fix.$proc$ir_decoder_fix.v:28$35'.
     1/1: $0\slow_clk_div[15:0]
Creating decoders for process `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.$proc$control.sv:41$303'.
     1/6: $0\ack_int[0:0]
     2/6: $0\ctl_valid[0:0]
     3/6: $0\enable[0:0]
     4/6: $0\direction[0:0]
     5/6: $0\servo_dc[7:0]
     6/6: $0\motor_dc[7:0]
Creating decoders for process `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.$proc$control.sv:27$299'.
     1/2: $0\frdiv[15:0]
     2/2: $0\sclk[0:0]
Creating decoders for process `$paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv.$proc$motor_drv.sv:21$290'.
     1/2: $0\pwm_counter[7:0]
     2/2: $0\clock_counter[8:0]
Creating decoders for process `$paramod$cc5cfa50089fcf584c032a5c3f3768aa1a1f6e95\servo_pdm.$proc$servo_pdm.sv:28$284'.
     1/3: $0\pdm_done[0:0]
     2/3: $0\div_counter[18:0]
     3/3: $0\pdmw_counter[15:0]

6.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

6.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\TRELLIS_FF.\Q' using process `\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:350$280'.
  created $dff cell `$procdff$513' with positive edge clock.
Creating register for signal `\DPR16X4C.\i' using process `\DPR16X4C.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$255'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$216_EN' using process `\DPR16X4C.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$255'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$217_EN' using process `\DPR16X4C.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$255'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$218_EN' using process `\DPR16X4C.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$255'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$219_EN' using process `\DPR16X4C.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$255'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$220_EN' using process `\DPR16X4C.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$255'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$221_EN' using process `\DPR16X4C.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$255'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$222_EN' using process `\DPR16X4C.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$255'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$223_EN' using process `\DPR16X4C.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$255'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$224_EN' using process `\DPR16X4C.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$255'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$225_EN' using process `\DPR16X4C.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$255'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$226_EN' using process `\DPR16X4C.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$255'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$227_EN' using process `\DPR16X4C.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$255'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$228_EN' using process `\DPR16X4C.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$255'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$229_EN' using process `\DPR16X4C.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$255'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$230_EN' using process `\DPR16X4C.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$255'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:287$231_ADDR' using process `\DPR16X4C.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:285$232'.
  created $dff cell `$procdff$514' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:287$231_DATA' using process `\DPR16X4C.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:285$232'.
  created $dff cell `$procdff$515' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:287$231_EN' using process `\DPR16X4C.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:285$232'.
  created $dff cell `$procdff$516' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\i' using process `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$198'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$156_EN' using process `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$198'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$157_EN' using process `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$198'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$158_EN' using process `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$198'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$159_EN' using process `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$198'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$160_EN' using process `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$198'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$161_EN' using process `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$198'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$162_EN' using process `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$198'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$163_EN' using process `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$198'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$164_EN' using process `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$198'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$165_EN' using process `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$198'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$166_EN' using process `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$198'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$167_EN' using process `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$198'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$168_EN' using process `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$198'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$169_EN' using process `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$198'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$170_EN' using process `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$198'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$171_EN' using process `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$198'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:223$172_ADDR' using process `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:221$174'.
  created $dff cell `$procdff$517' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:223$172_DATA' using process `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:221$174'.
  created $dff cell `$procdff$518' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:223$172_EN' using process `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:221$174'.
  created $dff cell `$procdff$519' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\muxwre' using process `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:213$173'.
  created direct connection (no actual register cell created).
Creating register for signal `\ir_decoder_fix.\ready' using process `\ir_decoder_fix.$proc$ir_decoder_fix.v:44$39'.
  created $adff cell `$procdff$522' with positive edge clock and positive level reset.
Creating register for signal `\ir_decoder_fix.\ir_input_last' using process `\ir_decoder_fix.$proc$ir_decoder_fix.v:44$39'.
  created $adff cell `$procdff$525' with positive edge clock and positive level reset.
Creating register for signal `\ir_decoder_fix.\t1' using process `\ir_decoder_fix.$proc$ir_decoder_fix.v:44$39'.
  created $adff cell `$procdff$528' with positive edge clock and positive level reset.
Creating register for signal `\ir_decoder_fix.\bit_count' using process `\ir_decoder_fix.$proc$ir_decoder_fix.v:44$39'.
  created $adff cell `$procdff$531' with positive edge clock and positive level reset.
Creating register for signal `\ir_decoder_fix.\cmd' using process `\ir_decoder_fix.$proc$ir_decoder_fix.v:44$39'.
  created $adff cell `$procdff$534' with positive edge clock and positive level reset.
Creating register for signal `\ir_decoder_fix.\slow_clk_div' using process `\ir_decoder_fix.$proc$ir_decoder_fix.v:28$35'.
  created $adff cell `$procdff$537' with positive edge clock and positive level reset.
Creating register for signal `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.\motor_dc' using process `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.$proc$control.sv:41$303'.
  created $dff cell `$procdff$542' with positive edge clock.
Creating register for signal `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.\servo_dc' using process `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.$proc$control.sv:41$303'.
  created $dff cell `$procdff$547' with positive edge clock.
Creating register for signal `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.\direction' using process `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.$proc$control.sv:41$303'.
  created $dff cell `$procdff$552' with positive edge clock.
Creating register for signal `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.\enable' using process `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.$proc$control.sv:41$303'.
  created $adff cell `$procdff$555' with positive edge clock and positive level reset.
Creating register for signal `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.\ctl_valid' using process `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.$proc$control.sv:41$303'.
  created $dff cell `$procdff$560' with positive edge clock.
Creating register for signal `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.\ack_int' using process `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.$proc$control.sv:41$303'.
  created $adff cell `$procdff$563' with positive edge clock and positive level reset.
Creating register for signal `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.\frdiv' using process `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.$proc$control.sv:27$299'.
  created $adff cell `$procdff$566' with positive edge clock and positive level reset.
Creating register for signal `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.\sclk' using process `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.$proc$control.sv:27$299'.
  created $adff cell `$procdff$569' with positive edge clock and positive level reset.
Creating register for signal `$paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv.\clock_counter' using process `$paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv.$proc$motor_drv.sv:21$290'.
  created $adff cell `$procdff$572' with positive edge clock and positive level reset.
Creating register for signal `$paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv.\pwm_counter' using process `$paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv.$proc$motor_drv.sv:21$290'.
  created $adff cell `$procdff$575' with positive edge clock and positive level reset.
Creating register for signal `$paramod$cc5cfa50089fcf584c032a5c3f3768aa1a1f6e95\servo_pdm.\pdmw_counter' using process `$paramod$cc5cfa50089fcf584c032a5c3f3768aa1a1f6e95\servo_pdm.$proc$servo_pdm.sv:28$284'.
  created $adff cell `$procdff$578' with positive edge clock and positive level reset.
Creating register for signal `$paramod$cc5cfa50089fcf584c032a5c3f3768aa1a1f6e95\servo_pdm.\div_counter' using process `$paramod$cc5cfa50089fcf584c032a5c3f3768aa1a1f6e95\servo_pdm.$proc$servo_pdm.sv:28$284'.
  created $adff cell `$procdff$581' with positive edge clock and positive level reset.
Creating register for signal `$paramod$cc5cfa50089fcf584c032a5c3f3768aa1a1f6e95\servo_pdm.\pdm_done' using process `$paramod$cc5cfa50089fcf584c032a5c3f3768aa1a1f6e95\servo_pdm.$proc$servo_pdm.sv:28$284'.
  created $adff cell `$procdff$584' with positive edge clock and positive level reset.

6.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

6.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$281'.
Found and cleaned up 2 empty switches in `\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:350$280'.
Removing empty process `TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:350$280'.
Removing empty process `DPR16X4C.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$255'.
Found and cleaned up 1 empty switch in `\DPR16X4C.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:285$232'.
Removing empty process `TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$198'.
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:221$174'.
Removing empty process `TRELLIS_DPR16X4.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:213$173'.
Found and cleaned up 9 empty switches in `\ir_decoder_fix.$proc$ir_decoder_fix.v:44$39'.
Removing empty process `ir_decoder_fix.$proc$ir_decoder_fix.v:44$39'.
Removing empty process `ir_decoder_fix.$proc$ir_decoder_fix.v:28$35'.
Found and cleaned up 10 empty switches in `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.$proc$control.sv:41$303'.
Removing empty process `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.$proc$control.sv:41$303'.
Found and cleaned up 1 empty switch in `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.$proc$control.sv:27$299'.
Removing empty process `$paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.$proc$control.sv:27$299'.
Found and cleaned up 2 empty switches in `$paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv.$proc$motor_drv.sv:21$290'.
Removing empty process `$paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv.$proc$motor_drv.sv:21$290'.
Found and cleaned up 4 empty switches in `$paramod$cc5cfa50089fcf584c032a5c3f3768aa1a1f6e95\servo_pdm.$proc$servo_pdm.sv:28$284'.
Removing empty process `$paramod$cc5cfa50089fcf584c032a5c3f3768aa1a1f6e95\servo_pdm.$proc$servo_pdm.sv:28$284'.
Cleaned up 30 empty switches.

6.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module ir_decoder_fix.
<suppressed ~19 debug messages>
Optimizing module $paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.
<suppressed ~9 debug messages>
Optimizing module $paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv.
<suppressed ~2 debug messages>
Optimizing module $paramod$cc5cfa50089fcf584c032a5c3f3768aa1a1f6e95\servo_pdm.
<suppressed ~8 debug messages>
Optimizing module top.

6.5. Executing FLATTEN pass (flatten design).
Deleting now unused module ir_decoder_fix.
Deleting now unused module $paramod$dadf92117a5cb6ec6253a85ed864e3cfa47c2067\control.
Deleting now unused module $paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv.
Deleting now unused module $paramod$cc5cfa50089fcf584c032a5c3f3768aa1a1f6e95\servo_pdm.
<suppressed ~4 debug messages>

6.6. Executing TRIBUF pass.

6.7. Executing DEMINOUT pass (demote inout ports to input or output).

6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8 debug messages>

6.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 32 unused cells and 148 unused wires.
<suppressed ~40 debug messages>

6.10. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

6.11. Executing OPT pass (performing simple optimizations).

6.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

6.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

6.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\decoder_inst.$procmux$344.
    dead port 2/2 on $mux $flatten\decoder_inst.$procmux$347.
    dead port 2/2 on $mux $flatten\decoder_inst.$procmux$349.
    dead port 1/2 on $mux $flatten\decoder_inst.$procmux$356.
    dead port 2/2 on $mux $flatten\decoder_inst.$procmux$359.
    dead port 2/2 on $mux $flatten\decoder_inst.$procmux$361.
    dead port 2/2 on $mux $flatten\decoder_inst.$procmux$368.
    dead port 2/2 on $mux $flatten\decoder_inst.$procmux$370.
    dead port 2/2 on $mux $flatten\decoder_inst.$procmux$376.
Removed 9 multiplexer ports.
<suppressed ~17 debug messages>

6.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\control_inst.$procmux$430: { $flatten\control_inst.$procmux$437_CMP $auto$opt_reduce.cc:137:opt_pmux$590 }
  Optimizing cells in module \top.
Performed a total of 1 changes.

6.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

6.11.6. Executing OPT_DFF pass (perform DFF optimizations).

6.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 17 unused wires.
<suppressed ~4 debug messages>

6.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

6.11.9. Rerunning OPT passes. (Maybe there is more to do..)

6.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~17 debug messages>

6.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

6.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

6.11.13. Executing OPT_DFF pass (perform DFF optimizations).

6.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

6.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

6.11.16. Finished OPT passes. (There is nothing left to do.)

6.12. Executing FSM pass (extract and optimize FSM).

6.12.1. Executing FSM_DETECT pass (finding FSMs in design).

6.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

6.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

6.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

6.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

6.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

6.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

6.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

6.13. Executing OPT pass (performing simple optimizations).

6.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

6.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

6.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~17 debug messages>

6.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

6.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

6.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\motor_inst.$procdff$575 ($adff) from module top (D = $flatten\motor_inst.$add$motor_drv.sv:29$293_Y, Q = \motor_inst.pwm_counter).
Adding EN signal on $flatten\decoder_inst.$procdff$534 ($adff) from module top (D = $flatten\decoder_inst.$6\cmd[31:0] [31:1], Q = \decoder_inst.cmd [31:1]).
Adding EN signal on $flatten\decoder_inst.$procdff$534 ($adff) from module top (D = $flatten\decoder_inst.$6\cmd[31:0] [0], Q = \decoder_inst.cmd [0]).
Adding EN signal on $flatten\decoder_inst.$procdff$531 ($adff) from module top (D = $flatten\decoder_inst.$procmux$393_Y, Q = \decoder_inst.bit_count).
Adding EN signal on $flatten\decoder_inst.$procdff$528 ($adff) from module top (D = $flatten\decoder_inst.$procmux$402_Y, Q = \decoder_inst.t1).
Adding EN signal on $flatten\decoder_inst.$procdff$525 ($adff) from module top (D = \gpio [3], Q = \decoder_inst.ir_input_last).
Adding EN signal on $flatten\decoder_inst.$procdff$522 ($adff) from module top (D = $flatten\decoder_inst.$procmux$415_Y, Q = \decoder_inst.ready).
Adding EN signal on $flatten\control_inst.$procdff$569 ($adff) from module top (D = $flatten\control_inst.$not$control.sv:34$301_Y, Q = \control_inst.sclk).
Adding EN signal on $flatten\control_inst.$procdff$560 ($dff) from module top (D = 1'1, Q = \control_inst.ctl_valid).
Adding EN signal on $flatten\control_inst.$procdff$552 ($dff) from module top (D = $flatten\control_inst.$procmux$430_Y, Q = \control_inst.direction).
Adding EN signal on $flatten\control_inst.$procdff$542 ($dff) from module top (D = $flatten\control_inst.$procmux$461_Y, Q = \control_inst.motor_dc).
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$617 ($dffe) from module top.

6.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 15 unused cells and 15 unused wires.
<suppressed ~16 debug messages>

6.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~4 debug messages>

6.13.9. Rerunning OPT passes. (Maybe there is more to do..)

6.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

6.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$615: { $auto$opt_dff.cc:194:make_patterns_logic$610 $auto$opt_dff.cc:194:make_patterns_logic$612 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$603: { \decoder_inst.strobe_front $auto$opt_dff.cc:194:make_patterns_logic$598 $auto$rtlil.cc:2779:Not$601 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$596: { \decoder_inst.strobe_front $auto$rtlil.cc:2779:Not$594 }
  Optimizing cells in module \top.
Performed a total of 3 changes.

6.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

6.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Removing always-active EN on $auto$ff.cc:266:slice$608 ($adffe) from module top.
Removing always-active EN on $auto$ff.cc:266:slice$607 ($adffe) from module top.

6.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

6.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

6.13.16. Rerunning OPT passes. (Maybe there is more to do..)

6.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

6.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

6.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

6.13.20. Executing OPT_DFF pass (perform DFF optimizations).

6.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

6.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

6.13.23. Finished OPT passes. (There is nothing left to do.)

6.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 4 bits (of 8) from port B of cell top.$flatten\control_inst.$sub$control.sv:86$315 ($sub).
Removed top 4 bits (of 8) from port B of cell top.$flatten\control_inst.$gt$control.sv:85$314 ($gt).
Removed top 4 bits (of 8) from port B of cell top.$flatten\control_inst.$add$control.sv:63$306 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\control_inst.$add$control.sv:37$302 ($add).
Removed top 16 bits (of 32) from port Y of cell top.$flatten\control_inst.$add$control.sv:37$302 ($add).
Removed top 31 bits (of 32) from mux cell top.$flatten\motor_inst.$ternary$motor_drv.sv:36$298 ($mux).
Removed top 31 bits (of 32) from mux cell top.$flatten\motor_inst.$ternary$motor_drv.sv:35$296 ($mux).
Removed top 7 bits (of 8) from port B of cell top.$flatten\motor_inst.$add$motor_drv.sv:29$293 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\motor_inst.$add$motor_drv.sv:26$291 ($add).
Removed top 23 bits (of 32) from port Y of cell top.$flatten\motor_inst.$add$motor_drv.sv:26$291 ($add).
Removed top 3 bits (of 8) from port B of cell top.$flatten\decoder_inst.$eq$ir_decoder_fix.v:87$55 ($eq).
Removed top 22 bits (of 32) from port B of cell top.$flatten\decoder_inst.$lt$ir_decoder_fix.v:81$52 ($lt).
Removed top 22 bits (of 32) from port B of cell top.$flatten\decoder_inst.$gt$ir_decoder_fix.v:81$51 ($gt).
Removed top 31 bits (of 32) from port B of cell top.$flatten\decoder_inst.$add$ir_decoder_fix.v:78$50 ($add).
Removed top 24 bits (of 32) from port Y of cell top.$flatten\decoder_inst.$add$ir_decoder_fix.v:78$50 ($add).
Removed top 23 bits (of 32) from port B of cell top.$flatten\decoder_inst.$gt$ir_decoder_fix.v:76$48 ($gt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\decoder_inst.$lt$ir_decoder_fix.v:76$47 ($lt).
Removed top 20 bits (of 32) from port B of cell top.$flatten\decoder_inst.$lt$ir_decoder_fix.v:69$44 ($lt).
Removed top 21 bits (of 32) from port B of cell top.$flatten\decoder_inst.$gt$ir_decoder_fix.v:69$43 ($gt).
Removed top 31 bits (of 32) from port B of cell top.$flatten\decoder_inst.$add$ir_decoder_fix.v:60$41 ($add).
Removed top 11 bits (of 32) from port Y of cell top.$flatten\decoder_inst.$add$ir_decoder_fix.v:60$41 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\decoder_inst.$add$ir_decoder_fix.v:33$36 ($add).
Removed top 16 bits (of 32) from port Y of cell top.$flatten\decoder_inst.$add$ir_decoder_fix.v:33$36 ($add).
Removed top 16 bits (of 32) from wire top.$flatten\control_inst.$add$control.sv:37$302_Y.
Removed top 11 bits (of 32) from wire top.$flatten\decoder_inst.$add$ir_decoder_fix.v:60$41_Y.
Removed top 23 bits (of 32) from wire top.$flatten\motor_inst.$add$motor_drv.sv:26$291_Y.
Removed top 7 bits (of 8) from wire top.$flatten\motor_inst.$add$motor_drv.sv:29$293_Y.

6.15. Executing PEEPOPT pass (run peephole optimizers).

6.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

6.17. Executing SHARE pass (SAT-based resource sharing).

6.18. Executing TECHMAP pass (map to technology primitives).

6.18.1. Executing Verilog-2005 frontend: /home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

6.18.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~244 debug messages>

6.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

6.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

6.21. Executing TECHMAP pass (map to technology primitives).

6.21.1. Executing Verilog-2005 frontend: /home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/mul2dsp.v
Parsing Verilog input from `/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

6.21.2. Executing Verilog-2005 frontend: /home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/dsp_map.v
Parsing Verilog input from `/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL18X18'.
Successfully finished Verilog frontend.

6.21.3. Continuing TECHMAP pass.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_soft_mul for cells of type $mul.
No more expansions possible.
<suppressed ~43 debug messages>

6.22. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\decoder_inst.$mul$ir_decoder_fix.v:42$38 ($mul).
  creating $macc model for $flatten\control_inst.$add$control.sv:37$302 ($add).
  creating $macc model for $flatten\control_inst.$add$control.sv:63$306 ($add).
  creating $macc model for $flatten\control_inst.$sub$control.sv:86$315 ($sub).
  creating $macc model for $flatten\decoder_inst.$add$ir_decoder_fix.v:33$36 ($add).
  creating $macc model for $flatten\decoder_inst.$add$ir_decoder_fix.v:60$41 ($add).
  creating $macc model for $flatten\decoder_inst.$add$ir_decoder_fix.v:78$50 ($add).
  creating $macc model for $flatten\motor_inst.$add$motor_drv.sv:26$291 ($add).
  creating $macc model for $flatten\motor_inst.$add$motor_drv.sv:29$293 ($add).
  creating $alu model for $macc $flatten\motor_inst.$add$motor_drv.sv:29$293.
  creating $alu model for $macc $flatten\motor_inst.$add$motor_drv.sv:26$291.
  creating $alu model for $macc $flatten\decoder_inst.$add$ir_decoder_fix.v:78$50.
  creating $alu model for $macc $flatten\decoder_inst.$add$ir_decoder_fix.v:60$41.
  creating $alu model for $macc $flatten\decoder_inst.$add$ir_decoder_fix.v:33$36.
  creating $alu model for $macc $flatten\control_inst.$sub$control.sv:86$315.
  creating $alu model for $macc $flatten\control_inst.$add$control.sv:63$306.
  creating $alu model for $macc $flatten\control_inst.$add$control.sv:37$302.
  creating $macc cell for $flatten\decoder_inst.$mul$ir_decoder_fix.v:42$38: $auto$alumacc.cc:365:replace_macc$636
  creating $alu model for $flatten\control_inst.$gt$control.sv:85$314 ($gt): new $alu
  creating $alu model for $flatten\control_inst.$lt$control.sv:81$311 ($lt): new $alu
  creating $alu model for $flatten\decoder_inst.$gt$ir_decoder_fix.v:69$43 ($gt): new $alu
  creating $alu model for $flatten\decoder_inst.$gt$ir_decoder_fix.v:76$48 ($gt): new $alu
  creating $alu model for $flatten\decoder_inst.$gt$ir_decoder_fix.v:81$51 ($gt): new $alu
  creating $alu model for $flatten\decoder_inst.$lt$ir_decoder_fix.v:69$44 ($lt): new $alu
  creating $alu model for $flatten\decoder_inst.$lt$ir_decoder_fix.v:76$47 ($lt): new $alu
  creating $alu model for $flatten\decoder_inst.$lt$ir_decoder_fix.v:81$52 ($lt): new $alu
  creating $alu model for $flatten\motor_inst.$lt$motor_drv.sv:34$294 ($lt): new $alu
  creating $alu cell for $flatten\motor_inst.$lt$motor_drv.sv:34$294: $auto$alumacc.cc:495:replace_alu$646
  creating $alu cell for $flatten\decoder_inst.$lt$ir_decoder_fix.v:81$52: $auto$alumacc.cc:495:replace_alu$651
  creating $alu cell for $flatten\decoder_inst.$lt$ir_decoder_fix.v:76$47: $auto$alumacc.cc:495:replace_alu$656
  creating $alu cell for $flatten\decoder_inst.$lt$ir_decoder_fix.v:69$44: $auto$alumacc.cc:495:replace_alu$661
  creating $alu cell for $flatten\decoder_inst.$gt$ir_decoder_fix.v:81$51: $auto$alumacc.cc:495:replace_alu$666
  creating $alu cell for $flatten\decoder_inst.$gt$ir_decoder_fix.v:76$48: $auto$alumacc.cc:495:replace_alu$677
  creating $alu cell for $flatten\decoder_inst.$gt$ir_decoder_fix.v:69$43: $auto$alumacc.cc:495:replace_alu$688
  creating $alu cell for $flatten\control_inst.$lt$control.sv:81$311: $auto$alumacc.cc:495:replace_alu$699
  creating $alu cell for $flatten\control_inst.$gt$control.sv:85$314: $auto$alumacc.cc:495:replace_alu$704
  creating $alu cell for $flatten\control_inst.$add$control.sv:37$302: $auto$alumacc.cc:495:replace_alu$715
  creating $alu cell for $flatten\control_inst.$add$control.sv:63$306: $auto$alumacc.cc:495:replace_alu$718
  creating $alu cell for $flatten\control_inst.$sub$control.sv:86$315: $auto$alumacc.cc:495:replace_alu$721
  creating $alu cell for $flatten\decoder_inst.$add$ir_decoder_fix.v:33$36: $auto$alumacc.cc:495:replace_alu$724
  creating $alu cell for $flatten\decoder_inst.$add$ir_decoder_fix.v:60$41: $auto$alumacc.cc:495:replace_alu$727
  creating $alu cell for $flatten\decoder_inst.$add$ir_decoder_fix.v:78$50: $auto$alumacc.cc:495:replace_alu$730
  creating $alu cell for $flatten\motor_inst.$add$motor_drv.sv:26$291: $auto$alumacc.cc:495:replace_alu$733
  creating $alu cell for $flatten\motor_inst.$add$motor_drv.sv:29$293: $auto$alumacc.cc:495:replace_alu$736
  created 17 $alu and 1 $macc cells.

6.23. Executing OPT pass (performing simple optimizations).

6.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

6.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

6.23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

6.23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

6.23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

6.23.6. Executing OPT_DFF pass (perform DFF optimizations).

6.23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 14 unused wires.
<suppressed ~3 debug messages>

6.23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

6.23.9. Rerunning OPT passes. (Maybe there is more to do..)

6.23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

6.23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

6.23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

6.23.13. Executing OPT_DFF pass (perform DFF optimizations).

6.23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

6.23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

6.23.16. Finished OPT passes. (There is nothing left to do.)

6.24. Executing MEMORY pass.

6.24.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

6.24.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

6.24.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

6.24.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

6.24.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

6.24.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

6.24.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

6.24.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

6.24.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

6.24.10. Executing MEMORY_COLLECT pass (generating $mem cells).

6.25. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

6.26. Executing MEMORY_LIBMAP pass (mapping memories to cells).

6.27. Executing TECHMAP pass (map to technology primitives).

6.27.1. Executing Verilog-2005 frontend: /home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/lutrams_map.v
Parsing Verilog input from `/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__TRELLIS_DPR16X4_'.
Successfully finished Verilog frontend.

6.27.2. Executing Verilog-2005 frontend: /home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/brams_map.v
Parsing Verilog input from `/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ECP5_DP16KD_'.
Generating RTLIL representation for module `\$__ECP5_PDPW16KD_'.
Successfully finished Verilog frontend.

6.27.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

6.28. Executing OPT pass (performing simple optimizations).

6.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~9 debug messages>

6.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

6.28.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:266:slice$625 ($dffe) from module top (D = $flatten\control_inst.$procmux$461_Y [2:0], Q = \control_inst.motor_dc [2:0]).

6.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

6.28.5. Rerunning OPT passes. (Removed registers in this run.)

6.28.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

6.28.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

6.28.8. Executing OPT_DFF pass (perform DFF optimizations).

6.28.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

6.28.10. Finished fast OPT passes.

6.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

6.30. Executing OPT pass (performing simple optimizations).

6.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

6.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

6.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

6.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$885: { $auto$rtlil.cc:2779:Not$622 \decoder_inst.ready $auto$opt_dff.cc:194:make_patterns_logic$882 }
    Consolidated identical input bits for $mux cell $flatten\control_inst.$procmux$457:
      Old ports: A=\control_inst.motor_dc, B={ $flatten\control_inst.$add$control.sv:63$306_Y [7:3] \control_inst.motor_dc [2:0] }, Y=$flatten\control_inst.$procmux$457_Y
      New ports: A=\control_inst.motor_dc [7:3], B=$flatten\control_inst.$add$control.sv:63$306_Y [7:3], Y=$flatten\control_inst.$procmux$457_Y [7:3]
      New connections: $flatten\control_inst.$procmux$457_Y [2:0] = \control_inst.motor_dc [2:0]
  Optimizing cells in module \top.
Performed a total of 2 changes.

6.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

6.30.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:266:slice$881 ($dffe) from module top (D = $flatten\control_inst.$procmux$461_Y [2:0], Q = \control_inst.motor_dc [2:0]).

6.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

6.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

6.30.9. Rerunning OPT passes. (Maybe there is more to do..)

6.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

6.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$895: { $auto$opt_dff.cc:194:make_patterns_logic$892 $auto$rtlil.cc:2779:Not$622 \decoder_inst.ready $auto$opt_dff.cc:194:make_patterns_logic$888 $auto$opt_dff.cc:194:make_patterns_logic$890 $auto$opt_dff.cc:194:make_patterns_logic$882 }
    Consolidated identical input bits for $mux cell $flatten\control_inst.$procmux$466:
      Old ports: A={ $flatten\control_inst.$add$control.sv:63$306_Y [7:3] 3'x }, B={ $flatten\control_inst.$procmux$457_Y [7:3] 3'x }, Y=$flatten\control_inst.$procmux$466_Y
      New ports: A=$flatten\control_inst.$add$control.sv:63$306_Y [7:3], B=$flatten\control_inst.$procmux$457_Y [7:3], Y=$flatten\control_inst.$procmux$466_Y [7:3]
      New connections: $flatten\control_inst.$procmux$466_Y [2:0] = 3'x
  Optimizing cells in module \top.
Performed a total of 2 changes.

6.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

6.30.13. Executing OPT_DFF pass (perform DFF optimizations).

6.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

6.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

6.30.16. Rerunning OPT passes. (Maybe there is more to do..)

6.30.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

6.30.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

6.30.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

6.30.20. Executing OPT_DFF pass (perform DFF optimizations).

6.30.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

6.30.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

6.30.23. Finished OPT passes. (There is nothing left to do.)

6.31. Executing TECHMAP pass (map to technology primitives).

6.31.1. Executing Verilog-2005 frontend: /home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

6.31.2. Executing Verilog-2005 frontend: /home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/arith_map.v
Parsing Verilog input from `/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ecp5_alu'.
Successfully finished Verilog frontend.

6.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_80_ecp5_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$645fe0cc96ae5edb83bff90cc2c78f4a20ca3e3c\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_80_ecp5_alu for cells of type $alu.
Using template $paramod$dc04b7d98e503a7bab16fce2df70e6e2c5ca34d6\_80_ecp5_alu for cells of type $alu.
Using template $paramod$50421b562f8eb1318d93ca56f0d931d9bef85d75\_80_ecp5_alu for cells of type $alu.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_80_ecp5_alu for cells of type $alu.
Using template $paramod$c2dbecda89be762ad1a456672395b5e77c030907\_80_ecp5_alu for cells of type $alu.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_80_ecp5_alu for cells of type $alu.
Using extmapper maccmap for cells of type $macc_v2.
  add $techmap635$flatten\decoder_inst.$mul$ir_decoder_fix.v:42$38.A * \gpio [3] (1x1 bits, unsigned)
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$26ba068b81d90b7844f694a2aa225ce0e4502019\_80_ecp5_alu for cells of type $alu.
Using template $paramod$53700bbee849b2010ad0b60a61ccd204a10e24ca\_80_ecp5_alu for cells of type $alu.
Using template $paramod$77511fd6a548f8ed566017c02ef4db095ab5a577\_80_ecp5_alu for cells of type $alu.
Using template $paramod$dc16c7b80a00b99d4eab6bb6fa146bcf87e88e1e\_80_ecp5_alu for cells of type $alu.
Using template $paramod$afbaf11f53f19fdab912562bb6e6ec02264957d9\_80_ecp5_alu for cells of type $alu.
Using template $paramod$93b49458bab1c00eb32aff458c583f46ff61e60f\_80_ecp5_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
No more expansions possible.
<suppressed ~1040 debug messages>

6.32. Executing OPT pass (performing simple optimizations).

6.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1351 debug messages>

6.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1242 debug messages>
Removed a total of 414 cells.

6.32.3. Executing OPT_DFF pass (perform DFF optimizations).

6.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 180 unused cells and 1144 unused wires.
<suppressed ~181 debug messages>

6.32.5. Finished fast OPT passes.

6.33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

6.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

6.35. Executing TECHMAP pass (map to technology primitives).

6.35.1. Executing Verilog-2005 frontend: /home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_ALDFF_NP_'.
Generating RTLIL representation for module `\$_ALDFF_PP_'.
Generating RTLIL representation for module `\$_ALDFFE_NPN_'.
Generating RTLIL representation for module `\$_ALDFFE_NPP_'.
Generating RTLIL representation for module `\$_ALDFFE_PPN_'.
Generating RTLIL representation for module `\$_ALDFFE_PPP_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

6.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP0N_ for cells of type $_DFFE_PP0N_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFFE_PP_.
Using template \$_DFF_PP1_ for cells of type $_DFF_PP1_.
No more expansions possible.
<suppressed ~195 debug messages>

6.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~17 debug messages>

6.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).

6.38. Executing LATTICE_GSR pass (implement FF init values).
Handling GSR in top.

6.39. Executing ATTRMVCP pass (move or copy attributes).

6.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 615 unused wires.
<suppressed ~1 debug messages>

6.41. Executing TECHMAP pass (map to technology primitives).

6.41.1. Executing Verilog-2005 frontend: /home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/latches_map.v
Parsing Verilog input from `/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

6.41.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

6.42. Executing ABC9 pass.

6.42.1. Executing ABC9_OPS pass (helper functions for ABC9).

6.42.2. Executing ABC9_OPS pass (helper functions for ABC9).

6.42.3. Executing PROC pass (convert processes to netlists).

6.42.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

6.42.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$4573 in module $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.
Removed a total of 0 dead cases.

6.42.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 1 assignment to connection.

6.42.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `$paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$4574'.
  Set init value: \Q = 1'0

6.42.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \muxlsr in `$paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$4573'.

6.42.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~1 debug messages>

6.42.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$4574'.
Creating decoders for process `$paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$4573'.
     1/1: $0\Q[0:0]

6.42.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).

6.42.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.\Q' using process `$paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$4573'.
  created $adff cell `$procdff$4579' with positive edge clock and positive level reset.

6.42.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

6.42.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$4574'.
Found and cleaned up 1 empty switch in `$paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$4573'.
Removing empty process `$paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$4573'.
Cleaned up 1 empty switch.

6.42.3.12. Executing OPT_EXPR pass (perform const folding).

6.42.4. Executing PROC pass (convert processes to netlists).

6.42.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

6.42.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$4596 in module $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.
Removed a total of 0 dead cases.

6.42.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 1 assignment to connection.

6.42.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `$paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$4597'.
  Set init value: \Q = 1'0

6.42.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \muxlsr in `$paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$4596'.

6.42.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~1 debug messages>

6.42.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$4597'.
Creating decoders for process `$paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$4596'.
     1/1: $0\Q[0:0]

6.42.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

6.42.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.\Q' using process `$paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$4596'.
  created $adff cell `$procdff$4602' with positive edge clock and positive level reset.

6.42.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

6.42.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$4597'.
Found and cleaned up 1 empty switch in `$paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$4596'.
Removing empty process `$paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$4596'.
Cleaned up 1 empty switch.

6.42.4.12. Executing OPT_EXPR pass (perform const folding).

6.42.5. Executing PROC pass (convert processes to netlists).

6.42.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

6.42.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$4611 in module $paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF.
Removed a total of 0 dead cases.

6.42.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 1 assignment to connection.

6.42.5.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `$paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$4612'.
  Set init value: \Q = 1'0

6.42.5.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \muxlsr in `$paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$4611'.

6.42.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~1 debug messages>

6.42.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$4612'.
Creating decoders for process `$paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$4611'.
     1/1: $0\Q[0:0]

6.42.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

6.42.5.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF.\Q' using process `$paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$4611'.
  created $adff cell `$procdff$4617' with positive edge clock and positive level reset.

6.42.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

6.42.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$4612'.
Found and cleaned up 1 empty switch in `$paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$4611'.
Removing empty process `$paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$4611'.
Cleaned up 1 empty switch.

6.42.5.12. Executing OPT_EXPR pass (perform const folding).

6.42.6. Executing PROC pass (convert processes to netlists).

6.42.6.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

6.42.6.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$4625 in module $paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF.
Removed a total of 0 dead cases.

6.42.6.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 1 assignment to connection.

6.42.6.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `$paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$4626'.
  Set init value: \Q = 1'1

6.42.6.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \muxlsr in `$paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$4625'.

6.42.6.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~1 debug messages>

6.42.6.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$4626'.
Creating decoders for process `$paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$4625'.
     1/1: $0\Q[0:0]

6.42.6.8. Executing PROC_DLATCH pass (convert process syncs to latches).

6.42.6.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF.\Q' using process `$paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$4625'.
  created $adff cell `$procdff$4631' with positive edge clock and positive level reset.

6.42.6.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

6.42.6.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$4626'.
Found and cleaned up 1 empty switch in `$paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$4625'.
Removing empty process `$paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF.$proc$/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$4625'.
Cleaned up 1 empty switch.

6.42.6.12. Executing OPT_EXPR pass (perform const folding).

6.42.7. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module top.
Found 0 SCCs.

6.42.8. Executing ABC9_OPS pass (helper functions for ABC9).

6.42.9. Executing PROC pass (convert processes to netlists).

6.42.9.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

6.42.9.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

6.42.9.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

6.42.9.4. Executing PROC_INIT pass (extract init attributes).

6.42.9.5. Executing PROC_ARST pass (detect async resets in processes).

6.42.9.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

6.42.9.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

6.42.9.8. Executing PROC_DLATCH pass (convert process syncs to latches).

6.42.9.9. Executing PROC_DFF pass (convert process syncs to FFs).

6.42.9.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

6.42.9.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

6.42.9.12. Executing OPT_EXPR pass (perform const folding).

6.42.10. Executing TECHMAP pass (map to technology primitives).

6.42.10.1. Executing Verilog-2005 frontend: /home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

6.42.10.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~170 debug messages>

6.42.11. Executing OPT pass (performing simple optimizations).

6.42.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.
Optimizing module $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.
Optimizing module $paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF.
Optimizing module $paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF.

6.42.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF'.
Finding identical cells in module `$paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF'.
Finding identical cells in module `$paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF'.
Finding identical cells in module `$paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF'.
Removed a total of 0 cells.

6.42.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

6.42.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.
  Optimizing cells in module $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.
  Optimizing cells in module $paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF.
  Optimizing cells in module $paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF.
Performed a total of 0 changes.

6.42.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF'.
Finding identical cells in module `$paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF'.
Finding identical cells in module `$paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF'.
Finding identical cells in module `$paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF'.
Removed a total of 0 cells.

6.42.11.6. Executing OPT_DFF pass (perform DFF optimizations).

6.42.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF..
Finding unused cells or wires in module $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF..
Finding unused cells or wires in module $paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF..
Finding unused cells or wires in module $paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF..

6.42.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.
Optimizing module $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.
Optimizing module $paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF.
Optimizing module $paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF.

6.42.11.9. Finished OPT passes. (There is nothing left to do.)

6.42.12. Executing TECHMAP pass (map to technology primitives).

6.42.12.1. Executing Verilog-2005 frontend: /home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/abc9_map.v
Parsing Verilog input from `/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

6.42.12.2. Continuing TECHMAP pass.
Using template $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF for cells of type $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.
Using template $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF for cells of type $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.
Using template $paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF for cells of type $paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF.
Using template $paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF for cells of type $paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF.
No more expansions possible.
<suppressed ~110 debug messages>

6.42.13. Executing Verilog-2005 frontend: /home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/abc9_model.v
Parsing Verilog input from `/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

6.42.14. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

6.42.15. Executing ABC9_OPS pass (helper functions for ABC9).

6.42.16. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

6.42.17. Executing TECHMAP pass (map to technology primitives).

6.42.17.1. Executing Verilog-2005 frontend: /home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

6.42.17.2. Continuing TECHMAP pass.
Using template $paramod$838872d5a4bab89607f53482b205c0fd50d8b82e\CCU2C for cells of type $paramod$838872d5a4bab89607f53482b205c0fd50d8b82e\CCU2C.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using template $paramod\LUT2\INIT=4'1010 for cells of type LUT2.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $not.
Using template $paramod\LUT4\INIT=16'1001011010101010 for cells of type LUT4.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~209 debug messages>

6.42.18. Executing OPT pass (performing simple optimizations).

6.42.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~18 debug messages>

6.42.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

6.42.18.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

6.42.18.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

6.42.18.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

6.42.18.6. Executing OPT_DFF pass (perform DFF optimizations).

6.42.18.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 55 unused wires.
<suppressed ~1 debug messages>

6.42.18.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

6.42.18.9. Rerunning OPT passes. (Maybe there is more to do..)

6.42.18.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

6.42.18.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

6.42.18.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

6.42.18.13. Executing OPT_DFF pass (perform DFF optimizations).

6.42.18.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

6.42.18.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

6.42.18.16. Finished OPT passes. (There is nothing left to do.)

6.42.19. Executing AIGMAP pass (map logic to AIG).
Module top: replaced 18 cells with 120 new cells, skipped 39 cells.
  replaced 3 cell types:
       2 $_OR_
       2 $_XOR_
      14 $_MUX_
  not replaced 3 cell types:
      31 $specify2
       4 $_NOT_
       4 $_AND_

6.42.20. Executing AIGMAP pass (map logic to AIG).
Module top: replaced 348 cells with 1908 new cells, skipped 517 cells.
  replaced 3 cell types:
     176 $_OR_
       1 $_XOR_
     171 $_MUX_
  not replaced 13 cell types:
       4 $scopeinfo
      97 $_NOT_
      87 $_AND_
       9 TRELLIS_FF
      41 $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF
       9 $paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF_$abc9_byp
     112 $paramod$838872d5a4bab89607f53482b205c0fd50d8b82e\CCU2C
      53 $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF
      53 $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF_$abc9_byp
      41 $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF_$abc9_byp
       1 $paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF_$abc9_byp
       9 $paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF
       1 $paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF

6.42.20.1. Executing ABC9_OPS pass (helper functions for ABC9).

6.42.20.2. Executing ABC9_OPS pass (helper functions for ABC9).

6.42.20.3. Executing XAIGER backend.
<suppressed ~11 debug messages>
Extracted 779 AND gates and 2793 wires from module `top' to a netlist network with 120 inputs and 131 outputs.

6.42.20.4. Executing ABC9_EXE pass (technology mapping using ABC9).

6.42.20.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =    120/    131  and =     647  lev =   14 (0.60)  mem = 0.04 MB  box = 216  bb = 104
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =    120/    131  and =     968  lev =   12 (0.48)  mem = 0.04 MB  ch =  150  box = 216  bb = 104
ABC: cst =       0  cls =    133  lit =     150  unused =    1245  proof =     0
ABC: + &if -W 300 -v 
ABC: K = 7. Memory (bytes): Truth =    0. Cut =   64. Obj =  148. Set =  672. CutMin = no
ABC: Node =     968.  Ch =   133.  Total mem =    0.45 MB. Peak cut mem =    0.02 MB.
ABC: P:  Del = 2765.00.  Ar =     847.0.  Edge =      992.  Cut =    10328.  T =     0.00 sec
ABC: P:  Del = 2765.00.  Ar =     845.0.  Edge =     1012.  Cut =    10317.  T =     0.00 sec
ABC: P:  Del = 2765.00.  Ar =     691.0.  Edge =      942.  Cut =    28281.  T =     0.01 sec
ABC: F:  Del = 2765.00.  Ar =     322.0.  Edge =      751.  Cut =    20722.  T =     0.00 sec
ABC: A:  Del = 2765.00.  Ar =     314.0.  Edge =      710.  Cut =    19305.  T =     0.01 sec
ABC: A:  Del = 2765.00.  Ar =     314.0.  Edge =      708.  Cut =    20876.  T =     0.01 sec
ABC: Total time =     0.03 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =    120/    131  and =     517  lev =   12 (0.48)  mem = 0.04 MB  box = 210  bb = 104
ABC: Mapping (K=7)  :  lut =    167  edge =     576  lev =    5 (0.25)  Boxes are not in a topological order. Switching to level computation without boxes.
ABC: levB =   12  mem = 0.01 MB
ABC: LUT = 167 : 2=56 33.5 %  3=16 9.6 %  4=69 41.3 %  5=17 10.2 %  6=8 4.8 %  7=1 0.6 %  Ave = 3.45
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 0.15 seconds, total: 0.15 seconds

6.42.20.6. Executing AIGER frontend.
<suppressed ~520 debug messages>
Removed 621 unused cells and 2563 unused wires.

6.42.20.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:      173
ABC RESULTS:   $paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF_$abc9_byp cells:        9
ABC RESULTS:   $paramod$838872d5a4bab89607f53482b205c0fd50d8b82e\CCU2C cells:      106
ABC RESULTS:   $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF_$abc9_byp cells:       53
ABC RESULTS:   $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF_$abc9_byp cells:       41
ABC RESULTS:   $paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF_$abc9_byp cells:        1
ABC RESULTS:           input signals:      108
ABC RESULTS:          output signals:       26
Removing temp directory.

6.42.21. Executing TECHMAP pass (map to technology primitives).

6.42.21.1. Executing Verilog-2005 frontend: /home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

6.42.21.2. Continuing TECHMAP pass.
Using template $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF for cells of type $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.
Using template $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF_$abc9_byp for cells of type $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF_$abc9_byp.
Using template $paramod$838872d5a4bab89607f53482b205c0fd50d8b82e\CCU2C for cells of type $paramod$838872d5a4bab89607f53482b205c0fd50d8b82e\CCU2C.
Using template $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF for cells of type $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.
Using template $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF_$abc9_byp for cells of type $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF_$abc9_byp.
Using template $paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF for cells of type $paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF.
Using template $paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF_$abc9_byp for cells of type $paramod$fc0db0418c65f8f3e9cd6d60036af078dabe316c\TRELLIS_FF_$abc9_byp.
Using template $paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF for cells of type $paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF.
Using template $paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF_$abc9_byp for cells of type $paramod$af6cfab7b64a03625b4e26db341709ec2a848ad1\TRELLIS_FF_$abc9_byp.
No more expansions possible.
<suppressed ~328 debug messages>
Removed 19 unused cells and 5666 unused wires.

6.43. Executing TECHMAP pass (map to technology primitives).

6.43.1. Executing Verilog-2005 frontend: /home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/home/aquatic72/Applications/oss-cad-suite-linux-x64-20250322/oss-cad-suite/lib/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_ALDFF_NP_'.
Generating RTLIL representation for module `\$_ALDFF_PP_'.
Generating RTLIL representation for module `\$_ALDFFE_NPN_'.
Generating RTLIL representation for module `\$_ALDFFE_NPP_'.
Generating RTLIL representation for module `\$_ALDFFE_PPN_'.
Generating RTLIL representation for module `\$_ALDFFE_PPP_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

6.43.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$eba7de026ff587370e320127e266317dae097a89\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$cbb2dfe31d344d3326d567c2ed5a4b2a29f63219\$lut for cells of type $lut.
Using template $paramod$d315acbf930db7c20b3f4ac2dad3b7982b1f437c\$lut for cells of type $lut.
Using template $paramod$251994398653c4cf8de320f1e306e535d5d2d624\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0010 for cells of type $lut.
Using template $paramod$5e9374f44a27c3f8a1c38af244ec43ceb4fb8d4f\$lut for cells of type $lut.
Using template $paramod$1d9a837622683d39ce63612c7ebf6d008cdeaf88\$lut for cells of type $lut.
Using template $paramod$3416dacc8eaab1f89b3d6b7398df3da766d29ef2\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$364c9ffbffac467d60dfec81bba4e18476c15602\$lut for cells of type $lut.
Using template $paramod$d6ca727e39f31d51d29072e0f33aa09c65e37336\$lut for cells of type $lut.
Using template $paramod$a15fd389a2f54cb7b94707b25934d226e68d9e2e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$47a8214374025465e226fa66bee690ff33268a25\$lut for cells of type $lut.
Using template $paramod$20f3f4b8e32f8a8b038b0056872dc94926194798\$lut for cells of type $lut.
Using template $paramod$b68f9800cc1bf69afcfbc0567a25e43ebb01456c\$lut for cells of type $lut.
Using template $paramod$9e5f70390a3889c3210d8e4e56450d46ac5f5ac1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$e51a8a571bee774247b38f52d6e85fd62ae52cea\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111111 for cells of type $lut.
Using template $paramod$8e44661def013b6bf9fe6f8b049ef2c838d749f9\$lut for cells of type $lut.
Using template $paramod$6b8a9b5d5d549718940e4b5228c16049da17d2e1\$lut for cells of type $lut.
Using template $paramod$23b36f34c590fc0e34851c7f5977e4e7de140523\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$89f931611b66d827751f4a175a88569d5ab95376\$lut for cells of type $lut.
Using template $paramod$65851e0770612ef6071cb38c17069ba899bca12f\$lut for cells of type $lut.
Using template $paramod$d9e900b5d071b7501363353307de07b29582aed0\$lut for cells of type $lut.
Using template $paramod$b3426365bf07fa41174d62ccbfe68ff3996342ee\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$c35ad3063d5038410210ddc72c1fd5fed46413b4\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101000 for cells of type $lut.
Using template $paramod$101238f3d8d49ab12a9b49a2f01cd503b26e9c61\$lut for cells of type $lut.
Using template $paramod$c28a8b7ce0535d090c4cfb52e9c74affd52b110c\$lut for cells of type $lut.
Using template $paramod$a5ba6d663c56337c1de25ae69825f63f78f84743\$lut for cells of type $lut.
Using template $paramod$12ef31446fd6f1fa9ed73d48ce76ac19cf9ea31d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod$f9e10fa04149cea5e442f2be7dafc6f3a365fb95\$lut for cells of type $lut.
Using template $paramod$941d53c707dff687155ee30c485182b78ebaedbf\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$f2ab7cf204e64c23b1724430d81255b27f921e03\$lut for cells of type $lut.
Using template $paramod$f4c1b0001706ab798825859848944649bc0a8a0a\$lut for cells of type $lut.
Using template $paramod$a988852add2bdce7c1dfac786401ba7c7bc832c1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
No more expansions possible.
<suppressed ~908 debug messages>

6.44. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in top.
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$9028.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$9028.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$9023.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$9023.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$9022.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$9026.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$9026.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$9020.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$9029.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$9029.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$9017$lut$flatten\decoder_inst.$procmux$393_Y[4].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$9017$lut$aiger9016$569.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9017$lut$aiger9016$820.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$9017$lut$aiger9016$820.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$9017$lut$aiger9016$766.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9017$lut$aiger9016$762.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$9017$lut$aiger9016$762.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$9017$lut$aiger9016$762.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$9017$lut$aiger9016$762.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 0)
  Optimizing lut $abc$9017$lut$aiger9016$762.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 0)
  Optimizing lut $abc$9017$lut$aiger9016$582.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$9017$lut$aiger9016$622.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9017$lut$aiger9016$638.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9017$lut$aiger9016$649.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9017$lut$aiger9016$762.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9017$lut$aiger9016$676.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9017$lut$aiger9016$686.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9017$lut$aiger9016$680.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9017$lut$auto$opt_dff.cc:219:make_patterns_logic$894.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$9017$lut$aiger9016$695.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9017$lut$aiger9016$756.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9017$lut$aiger9016$762.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9017$lut$aiger9016$775.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$9017$lut$aiger9016$780.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9017$lut$aiger9016$820.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$9017$lut$aiger9016$825.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9017$lut$aiger9016$845.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9017$lut$auto$opt_dff.cc:219:make_patterns_logic$894.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$9017$lut$flatten\decoder_inst.$procmux$393_Y[4].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$9017$lut$flatten\decoder_inst.$procmux$393_Y[4].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$9022.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$9020.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$9022.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$9023.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$9026.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$9028.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$9029.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$9020.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
Removed 0 unused cells and 457 unused wires.

6.45. Executing AUTONAME pass.
Renamed 18347 objects in module top (133 iterations).
<suppressed ~963 debug messages>

6.46. Executing HIERARCHY pass (managing design hierarchy).
Attribute `top' found on module `top'. Setting top module to top.

6.46.1. Analyzing design hierarchy..
Top module:  \top

6.46.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

6.47. Printing statistics.

=== top ===

   Number of wires:                512
   Number of wire bits:            950
   Number of public wires:         512
   Number of public wire bits:     950
   Number of ports:                  4
   Number of port bits:             12
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                492
     $scopeinfo                      4
     CCU2C                         106
     L6MUX21                        11
     LUT4                          221
     PFUMX                          37
     TRELLIS_FF                    113

6.48. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

6.49. Executing JSON backend.

End of script. Logfile hash: c3dd163054, CPU: user 1.18s system 0.03s, MEM: 46.53 MB peak
Yosys 0.51+46 (git sha1 8bde6ac17, clang++ 18.1.8 -fPIC -O3)
Time spent: 28% 25x read_verilog (0 sec), 15% 11x techmap (0 sec), ...
